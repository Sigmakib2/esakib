---------------| 1 (1) |----------
#include <iostream>
using namespace std;
//width length height
int volume(int width, int length, int height){
    int rectangle = width*length*height;
    cout<<"Volume of Rectangle is: "<<rectangle<<endl;
}
//PI Radius Height
int volume(double radius, int height){
    float cylinder = 3.1416*radius*radius*height;
    cout<<"Volume of Cylinder is: "<<cylinder<<endl;
}
//PI Radius Height
int volume(float length){
    float cube = length*length*length;
    cout<<"Volume of Cube is: "<<cube<<endl;
}
int main()
{
    volume(2,3,4);
    volume(4.8,6);
    volume(5.7);
}
-------------| 2 (4) |------------

#include<iostream>

using namespace std;

class B;
class A
{
    int p;
public:
    void f1(int x)
    {
        p=x;
    }
    friend void process(A,B);
};
class B
{
    int q;
public:
    void f2(int y)
    {
        q=y;
    }
    friend void process(A,B);
};
void process(A t1,B t2)
{
    if (t1.p>t2.q)
    {
        cout<<"Largest is "<<t1.p;
        cout<<"Smallest is "<<t2.q;
    }
    else
    {
        cout<<"Smallest is "<<t1.p;
        cout<<"Largest is "<<t2.q;
    }
}
int main()
{
    A ob1;
    B ob2;
    ob1.f1(5);
    ob2.f2(10);
    process(ob1,ob2);
    return 0;
}

-------------| 3 (7) |---------------

#include<iostream>

using namespace std;

class Area_cl
{
public:
    double height,width;
};
class rect:public Area_cl
{
public:
    rect(double x,double y)
    {
        height=x;
        width=y;
    }
    void area_rect()
    {
        cout<<"Area of rectangle is "<<height*width;
    }

};
class isoscale:public Area_cl
{
    public:
    isoscale(double p,double q)
    {
        height=p;
        width=q;
    }
    void area_tri()
    {
        cout<<"Area of Triangle is "<<0.5*height*width;
    }
};
int main()
{
    rect obj1(5,2);
    obj1.area_rect();
    isoscale obj2(2,4);
    obj2.area_tri();
    return 0;
}

---------------| 4 (8) |--------------------



